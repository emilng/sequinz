import './App.css.proxy.js';
/* src/App.svelte generated by Svelte v3.29.4 */
import {
	SvelteComponent,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	transition_in,
	transition_out
} from "../web_modules/svelte/internal.js";

import SeqGrid from "./sequencergrid/SeqGrid.js";

function create_fragment(ctx) {
	let div;
	let seqgrid;
	let current;
	seqgrid = new SeqGrid({});
	seqgrid.$on("update", /*handleUpdateNotes*/ ctx[0]);

	return {
		c() {
			div = element("div");
			create_component(seqgrid.$$.fragment);
			attr(div, "class", "App");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			mount_component(seqgrid, div, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(seqgrid.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(seqgrid.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			destroy_component(seqgrid);
		}
	};
}

function instance($$self) {
	let noteData = {};
	let chord = [];
	let chordPlaying = false;
	let highNotePlaying = false;
	let midNotePlaying = false;

	function handleUpdateNotes(event) {
		noteData = event.detail;
	}

	function handleUpdateChord(event) {
		chord = event.detail;
	}

	function handleUpdateChordPlaying(event) {
		chordPlaying = event.detail;
	}

	function handleUpdateHighNotePlaying(event) {
		highNotePlaying = event.detail;
	}

	function handleUpdateMidNotePlaying(event) {
		midNotePlaying = event.detail;
	}

	return [handleUpdateNotes];
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default App;